#!/usr/bin/python
#Import and set up the strip
from animate import Animate, runshow
from neopixel import Color
import sys, tty, time, termios
import time

inifile = '/opt/lightshow/etc/lightshow.json'
anim = Animate(inifile)

def getChar():
  if "_func" not in getChar.__dict__:
    import tty, sys, termios # raises ImportError if unsupported
    def _ttyRead():
      fd = sys.stdin.fileno()
      oldSettings = termios.tcgetattr(fd)
      try:
        tty.setcbreak(fd)
        answer = sys.stdin.read(1)
      finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, oldSettings)
      return answer
    getChar._func=_ttyRead
  return getChar._func()

pixel = 20
red = 0
green = 0
blue = 0

print "Enter color characters"
print " R/r = +/- red"
print " G/g = +/- green"
print " B/b = +/- blue"
print " Z/z = reset to 0,0,0"
print " E/e = Enter color components manually"
#print " P   = change pixel number"
print " p   = print current color value as integer"
print " S/s = save color (prompts for color name)"
print " D/d = Display defined color"
print " Q/q = Quit"

print str(anim.getcolors())

while True:
  print("\rPixel: " + str(pixel) + " R:" + str(red) + " G:" + str(green) + " B:" + str(blue) + "      "),
  color = Color(red,green,blue)
  runshow(anim,"SetPixel",(pixel,color,))

  c = getChar()
  if c == "R":
    red += 1
  elif c == "r":
    red -= 1
  elif c == "G":
    green += 1
  elif c == "g":
    green -= 1
  elif c == "B":
    blue += 1
  elif c == "b":
    blue -= 1
  elif c == "C":
    print "TBD"
  elif c == "p":
    print "Color = " + str(color)
  elif c == "S" or c == "s":
    cname = raw_input("Saving color, enter color name: ")
    anim.savecolor(cname, str(color))
  elif c == "Q" or c == "q":
    runshow(anim,"Solid")
    sys.exit()
  elif c == "Z" or c == "z":
    red = 0
    green = 0
    blue = 0
  elif c == "d" or c == "D":
    cname = raw_input("loading color, enter color name: ")
    color = anim.getcolor(cname)
    #Extract bits from color
    print "Color " + cname + " = " + str(color) + " which is " + bin(color)
    mask = 0b11111111
    blue = int(mask & color)
    print "Blue bin = " + bin(blue)
    if color > 255:
      mask = 0b1111111100000000
      tmp = mask & color
      green = tmp >> 8
      print "Green bin= " + bin(green)
    else:
      green = 0
    if color > 65280:
      mask = 0b111111110000000000000000
      tmp = mask & color
      red = tmp >> 16
      print "Red bin  = " + bin(red)
    else:
      red = 0

    
  elif c == "E" or c == "e":
    print "\nEnter Color Values"
    red = -1
    while red < 0 or red > 255:
      try:
        red   = int(raw_input("red  (0-255): "))
      except:
        pass
    green = -1
    while green < 0 or green > 255:
      try:
        green   = int(raw_input("green(0-255): "))
      except:
        pass
    blue = -1
    while blue < 0 or blue > 255:
      try:
        blue   = int(raw_input("blue(0-255): "))
      except:
        pass

  if red > 255:
    red = 255
  elif red < 0:
    red = 0
  if green > 255:
    green = 255
  elif green < 0:
    green = 0
  if blue > 255:
    blue = 255
  elif blue < 0:
    blue = 0
    

